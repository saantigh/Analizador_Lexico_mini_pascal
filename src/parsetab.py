
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORXORleftANDrightNOTnonassocEQUALDISTINTLESSLESSEQUALGREATERGREATEREQUALINleftPLUSMINUSleftTIMESDIVIDEDIVMODSHLSHRrightUMINUSUPLUSADDRESS_OFABSOLUTE ADDRESS_OF AND ARRAY ASIGNATION ASM BEGIN BOOLEAN BYTE CARET CASE CHAR COLON COMMA CONST CONSTRUCTOR DESTRUCTOR DISPOSE DISTINT DIV DIVIDE DIVIDE_ASIGN DO DOBLEDOT DOT DOUBLE DOWNTO ELSE END EQUAL EXIT EXTENDED EXTERNAL FALSE FILE FOR FORWARD FUNCTION GOTO GREATER GREATEREQUAL ID IF IMPLEMENTATION IN INHERITED INLINE INTEGER INTERFACE INTERRUPT LABEL LBRACKET LESS LESSEQUAL LONGINT LPAREN MINUS MINUS_ASIGN MOD NEW NIL NOT NUMBER OBJECT OF OR ORDINAL_CONSTANT PACKED PLUS PLUS_ASIGN PRIVATE PROCEDURE PROGRAM RBRACKET REAL RECORD REPEAT RPAREN SEMICOLON SET SHL SHORT SHORTINT SHR SINGLE STRING TEXT THEN TIMES TIMES_ASIGN TO TRUE TYPE UNIT UNTIL USES VAR VIRTUAL WHILE WITH WORD XORprogram : program_header uses_clause declaration_blocks main_blockprogram_header : PROGRAM ID SEMICOLON\n    | UNIT ID SEMICOLONuses_clause : USES id_list SEMICOLON\n    | emptyid_list : ID\n    | id_list COMMA IDdeclaration_blocks : declaration_blocks declaration_block\n    | emptydeclaration_block : label_declaration\n    | const_declaration_block\n    | type_declaration_block\n    | var_declaration_block\n    | procedure_declaration\n    | function_declaration\n    | constructor_implementation\n    | destructor_implementation\n    | method_implementation\n    | implementation_block\n    | interface_blockmain_block : compound_statement DOTinterface_block : INTERFACE declaration_blocksimplementation_block : IMPLEMENTATION declaration_blockslabel_declaration : LABEL number_list SEMICOLONnumber_list : NUMBER\n    | number_list COMMA NUMBERconst_declaration_block : CONST const_listconst_list : const_list const_declaration\n    | const_declarationconst_declaration : ID EQUAL constant SEMICOLON\n    | ID COLON data_type_list EQUAL constant SEMICOLONconstant : NUMBER\n    | STRING\n    | TRUE\n    | FALSE\n    | NIL\n    | ORDINAL_CONSTANTtype_declaration_block : TYPE type_listtype_list : type_list type_declaration\n    | type_declarationtype_declaration : ID EQUAL type_definition SEMICOLONtype_definition : data_type_list\n    | LPAREN id_list RPAREN\n    | NUMBER DOBLEDOT NUMBER\n    | CHAR DOBLEDOT CHAR\n    | ID DOBLEDOT ID\n    | record_type\n    | array_type\n    | set_type\n    | pointer_type\n    | file_type\n    | object_type\n    | string_typestring_type : STRING\n    | STRING LBRACKET NUMBER RBRACKETrecord_type : RECORD record_list END\n    | PACKED RECORD record_list ENDarray_type : ARRAY LBRACKET type_range_list RBRACKET OF data_type_list\n    | PACKED ARRAY LBRACKET type_range_list RBRACKET OF data_type_list\n    | ARRAY OF data_type_list\n    type_range_list : type_range\n    | type_range_list COMMA type_rangetype_range : NUMBER DOBLEDOT NUMBER\n    | NUMBER DOBLEDOT ID\n    | ID DOBLEDOT NUMBER\n    | CHAR DOBLEDOT CHAR\n    | ID DOBLEDOT ID\n    | IDset_type : SET OF set_rangeset_range : data_type_set\n    | NUMBER DOBLEDOT NUMBER\n    | CHAR DOBLEDOT CHAR\n    | IDpointer_type : CARET ID\n    | CARET data_type_listfile_type : FILE OF data_type_list\n    | FILEobject_type : OBJECT object_heritage object_fields object_methods ENDobject_heritage : LPAREN ID RPAREN\n    | emptyobject_fields : object_fields var_declaration\n    | emptyobject_methods : object_methods method_declaration\n    | emptymethod_declaration : procedure_header SEMICOLON\n    | function_header SEMICOLON\n    | constructor_declaration\n    | destructor_declaration\n    | procedure_header SEMICOLON directive\n    | function_header SEMICOLON directiveconstructor_implementation : CONSTRUCTOR ID DOT ID parameters SEMICOLON declaration_blocks compound_statement SEMICOLONdestructor_implementation : DESTRUCTOR ID DOT ID parameters SEMICOLON declaration_blocks compound_statement SEMICOLONmethod_implementation : PROCEDURE ID DOT ID parameters SEMICOLON declaration_blocks compound_statement SEMICOLON\n    | FUNCTION ID DOT ID parameters COLON data_type_list SEMICOLON declaration_blocks compound_statement SEMICOLON\n    constructor_declaration : CONSTRUCTOR ID parameters SEMICOLON\n    | CONSTRUCTOR ID parameters SEMICOLON directivedestructor_declaration : DESTRUCTOR ID parameters SEMICOLON\n    | DESTRUCTOR ID parameters SEMICOLON directiverecord_list : record_list record_declaration\n    | record_declarationrecord_declaration : id_list COLON data_type_list SEMICOLON\n    | CASE ID COLON data_type_list OF variant_list\n    | id_list COLON data_type_listvariant_list : variant_list variant\n    | variantvariant : constant_list COLON LPAREN record_list RPAREN SEMICOLON\n    | constant_list COLON LPAREN RPAREN SEMICOLONconstant_list : constant\n    | constant_list COMMA constantvar_declaration_block : VAR var_listvar_list : var_list var_declaration\n    | var_declarationvar_declaration : id_list COLON type_definition SEMICOLON\n    | id_list COLON type_definition EQUAL expression SEMICOLON\n    | id_list COLON type_definition ABSOLUTE ID SEMICOLONprocedure_declaration : procedure_header SEMICOLON directive SEMICOLON\n    | procedure_header SEMICOLON declaration_blocks compound_statement SEMICOLONprocedure_header : PROCEDURE ID parametersdirective : FORWARD\n    | EXTERNAL\n    | EXTERNAL STRING\n    | ASM\n    | INLINE\n    | VIRTUALfunction_declaration : function_header SEMICOLON directive\n    | function_header SEMICOLON declaration_blocks compound_statement SEMICOLONfunction_header : FUNCTION ID parameters COLON data_type_listparameters : LPAREN parameter_list RPAREN\n    | emptyparameter_list : parameter_list SEMICOLON parameter_group\n    | parameter_groupparameter_group : id_list COLON data_type_list\n    | VAR id_list COLON data_type_list\n    | CONST id_list COLON data_type_list\n    | procedure_header\n    | function_header\n    data_type_list : INTEGER\n                   | BYTE\n                   | LONGINT\n                   | SHORTINT\n                   | WORD\n                   | REAL\n                   | SINGLE\n                   | DOUBLE\n                   | EXTENDED\n                   | SHORT\n                   | BOOLEAN\n                   | CHAR\n                   | STRING\n                   | STRING LBRACKET NUMBER RBRACKET\n                   | ID\n                   | ABSOLUTE ID\n                   | FILE\n                   | array_type\n                   | pointer_type\n                   | record_type\n                   | set_type\n                   | file_type\n                   | object_type\n                   | string_typedata_type_set : BYTE\n    | SHORTINT\n    | WORD\n    | BOOLEAN\n    | CHAR\n    | IDcompound_statement : BEGIN sentences_list ENDsentences_list : sentences_list sentence SEMICOLON\n    | sentence SEMICOLON\n    | emptysentence : assignment\n    | procedure_call\n    | compound_statement\n    | if_statement\n    | case_statement\n    | for_statement\n    | while_statement\n    | repeat_statement\n    | with_statement\n    | goto_statement\n    | labeled_sentence\n    | asm_statement\n    | emptyasm_statement : ASMassignment : variable ASIGNATION expression\n    | ID ASIGNATION expression\n    | variable PLUS_ASIGN    expression      \n    | ID       PLUS_ASIGN    expression\n    | variable MINUS_ASIGN   expression      \n    | ID       MINUS_ASIGN   expression\n    | variable TIMES_ASIGN   expression      \n    | ID       TIMES_ASIGN   expression\n    | variable DIVIDE_ASIGN  expression      \n    | ID       DIVIDE_ASIGN  expression\n    | variable EQUAL         expression    \n    | ID       EQUAL         expression\n    procedure_call : ID\n    | ID LPAREN expression_list RPAREN\n    | ID LPAREN RPAREN\n    | variable DOT ID LPAREN expression_list RPAREN\n    | variable DOT ID LPAREN RPAREN\n    | NEW LPAREN expression_list RPAREN\n    | NEW LPAREN RPAREN\n    | DISPOSE LPAREN expression_list RPAREN\n    | DISPOSE LPAREN RPARENif_statement : IF expression THEN sentence\n    | IF expression THEN sentence ELSE sentencecase_statement : CASE expression OF case_list END\n    | CASE expression OF case_list ELSE sentences_list SEMICOLON END\n    | CASE expression OF case_list ELSE sentences_list ENDcase_list : case_list case_label COLON sentence SEMICOLON\n    | case_label COLON sentence SEMICOLON\n    | emptycase_label : constant\n    | constant DOBLEDOT constant\n    | case_label COMMA constantfor_statement : FOR ID ASIGNATION expression TO expression DO sentence\n    | FOR ID ASIGNATION expression DOWNTO expression DO sentence\n    | FOR ID IN expression DO sentencewhile_statement : WHILE expression DO sentencerepeat_statement : REPEAT sentences_list UNTIL expressionwith_statement : WITH variable_list DO sentencevariable_list : variable\n    | variable_list COMMA variablegoto_statement : GOTO NUMBERlabeled_sentence : NUMBER COLON sentenceempty :expression : expression OR simple_expression\n    | expression XOR simple_expression\n    | simple_expressionsimple_expression : simple_expression AND relational_expression\n    | relational_expressionrelational_expression : relational_expression relational_operator additive_expression\n    | additive_expressionrelational_operator : EQUAL\n    | DISTINT\n    | LESS\n    | LESSEQUAL\n    | GREATER\n    | GREATEREQUAL\n    | INadditive_expression : additive_expression PLUS multiplicative_expression\n    | additive_expression MINUS multiplicative_expression\n    | multiplicative_expressionmultiplicative_expression : multiplicative_expression TIMES unary_expression\n    | multiplicative_expression DIVIDE unary_expression\n    | multiplicative_expression DIV unary_expression\n    | multiplicative_expression MOD unary_expression\n    | multiplicative_expression SHL unary_expression\n    | multiplicative_expression SHR unary_expression\n    | unary_expressionunary_expression : NOT unary_expression\n    | MINUS unary_expression %prec UMINUS\n    | PLUS unary_expression %prec UPLUS\n    | ADDRESS_OF unary_expression\n    | primary_expressionprimary_expression : variable\n    | NUMBER\n    | STRING\n    | TRUE\n    | FALSE\n    | NIL\n    | LPAREN expression RPAREN\n    | function_call\n    | set_constructorset_item : expression\n    | expression DOBLEDOT expressionset_item_list : set_item\n    | set_item_list COMMA set_itemset_constructor : LBRACKET set_item_list RBRACKET\n    | LBRACKET RBRACKETvariable : ID\n    | variable DOT ID\n    | variable LBRACKET expression_list RBRACKET\n    | variable CARET\n    | LPAREN variable RPAREN CARET\n    function_call : ID LPAREN expression_list RPAREN\n    | ID LPAREN RPAREN\n    | variable DOT ID LPAREN expression_list RPAREN\n    | variable DOT ID LPAREN RPAREN\n    expression_list : expression\n    | expression_list COMMA expression'
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'UNIT':([0,],[4,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_header':([0,],[2,]),'uses_clause':([2,],[5,]),'empty':([2,5,30,41,42,46,70,86,87,90,91,144,148,199,232,235,237,277,297,298,299,309,365,386,387,393,399,401,406,431,440,441,442,452,453,490,491,515,525,526,],[7,11,48,11,11,97,48,11,11,172,172,97,97,97,341,97,97,367,172,172,172,172,432,172,172,97,48,97,97,475,11,11,11,97,97,97,97,11,172,172,]),'declaration_blocks':([5,41,42,86,87,440,441,442,515,],[10,92,93,159,166,479,480,481,530,]),'id_list':([6,34,83,171,275,281,303,304,357,360,382,417,431,547,551,],[12,85,85,302,362,370,384,385,362,362,302,362,85,362,362,]),'main_block':([10,],[16,]),'declaration_block':([10,92,93,159,166,479,480,481,530,],[17,17,17,17,17,17,17,17,17,]),'compound_statement':([10,30,46,70,144,148,159,166,199,235,237,393,399,401,406,452,453,479,480,481,490,491,530,],[18,51,51,51,51,51,294,296,51,51,51,51,51,51,51,51,51,512,513,514,51,51,540,]),'label_declaration':([10,92,93,159,166,479,480,481,530,],[19,19,19,19,19,19,19,19,19,]),'const_declaration_block':([10,92,93,159,166,479,480,481,530,],[20,20,20,20,20,20,20,20,20,]),'type_declaration_block':([10,92,93,159,166,479,480,481,530,],[21,21,21,21,21,21,21,21,21,]),'var_declaration_block':([10,92,93,159,166,479,480,481,530,],[22,22,22,22,22,22,22,22,22,]),'procedure_declaration':([10,92,93,159,166,479,480,481,530,],[23,23,23,23,23,23,23,23,23,]),'function_declaration':([10,92,93,159,166,479,480,481,530,],[24,24,24,24,24,24,24,24,24,]),'constructor_implementation':([10,92,93,159,166,479,480,481,530,],[25,25,25,25,25,25,25,25,25,]),'destructor_implementation':([10,92,93,159,166,479,480,481,530,],[26,26,26,26,26,26,26,26,26,]),'method_implementation':([10,92,93,159,166,479,480,481,530,],[27,27,27,27,27,27,27,27,27,]),'implementation_block':([10,92,93,159,166,479,480,481,530,],[28,28,28,28,28,28,28,28,28,]),'interface_block':([10,92,93,159,166,479,480,481,530,],[29,29,29,29,29,29,29,29,29,]),'procedure_header':([10,92,93,159,166,171,382,473,479,480,481,530,],[35,35,35,35,35,305,305,506,35,35,35,35,]),'function_header':([10,92,93,159,166,171,382,473,479,480,481,530,],[36,36,36,36,36,306,306,507,36,36,36,36,]),'sentences_list':([30,70,399,],[46,144,452,]),'sentence':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[47,96,47,96,239,319,345,347,449,47,454,459,96,488,518,519,]),'assignment':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'procedure_call':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'if_statement':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'case_statement':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'for_statement':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'while_statement':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'repeat_statement':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'with_statement':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'goto_statement':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'labeled_sentence':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'asm_statement':([30,46,70,144,148,199,235,237,393,399,401,406,452,453,490,491,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'variable':([30,46,63,66,67,69,70,71,99,100,101,102,103,104,106,108,109,110,111,112,113,114,117,118,123,125,127,128,136,140,144,148,199,200,201,202,203,211,212,214,215,216,217,218,219,224,227,233,234,235,236,237,238,311,313,337,338,374,393,394,399,401,404,405,406,452,453,490,491,],[61,61,115,130,130,130,61,146,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,226,130,61,61,61,130,130,130,130,130,130,130,130,130,130,130,130,226,130,130,130,61,130,61,348,130,130,130,130,130,61,130,61,61,130,130,61,61,61,61,61,]),'number_list':([31,],[75,]),'const_list':([32,],[77,]),'const_declaration':([32,77,],[78,151,]),'type_list':([33,],[80,]),'type_declaration':([33,80,],[81,154,]),'var_list':([34,],[83,]),'var_declaration':([34,83,431,],[84,156,474,]),'expression':([66,67,69,99,100,101,102,103,104,106,108,109,110,111,112,113,114,117,118,136,140,224,227,233,234,236,311,313,337,338,374,394,404,405,],[119,141,143,176,177,178,179,180,181,184,185,186,187,188,189,190,184,184,184,225,231,225,184,343,344,346,184,392,231,397,438,184,457,458,]),'simple_expression':([66,67,69,99,100,101,102,103,104,106,108,109,110,111,112,113,114,117,118,136,140,200,201,224,227,233,234,236,311,313,337,338,374,394,404,405,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,320,321,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'relational_expression':([66,67,69,99,100,101,102,103,104,106,108,109,110,111,112,113,114,117,118,136,140,200,201,202,224,227,233,234,236,311,313,337,338,374,394,404,405,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,322,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'additive_expression':([66,67,69,99,100,101,102,103,104,106,108,109,110,111,112,113,114,117,118,136,140,200,201,202,203,224,227,233,234,236,311,313,337,338,374,394,404,405,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,323,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'multiplicative_expression':([66,67,69,99,100,101,102,103,104,106,108,109,110,111,112,113,114,117,118,136,140,200,201,202,203,211,212,224,227,233,234,236,311,313,337,338,374,394,404,405,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,324,325,124,124,124,124,124,124,124,124,124,124,124,124,124,]),'unary_expression':([66,67,69,99,100,101,102,103,104,106,108,109,110,111,112,113,114,117,118,123,125,127,128,136,140,200,201,202,203,211,212,214,215,216,217,218,219,224,227,233,234,236,311,313,337,338,374,394,404,405,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,213,220,221,222,126,126,126,126,126,126,126,126,326,327,328,329,330,331,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'primary_expression':([66,67,69,99,100,101,102,103,104,106,108,109,110,111,112,113,114,117,118,123,125,127,128,136,140,200,201,202,203,211,212,214,215,216,217,218,219,224,227,233,234,236,311,313,337,338,374,394,404,405,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'function_call':([66,67,69,99,100,101,102,103,104,106,108,109,110,111,112,113,114,117,118,123,125,127,128,136,140,200,201,202,203,211,212,214,215,216,217,218,219,224,227,233,234,236,311,313,337,338,374,394,404,405,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'set_constructor':([66,67,69,99,100,101,102,103,104,106,108,109,110,111,112,113,114,117,118,123,125,127,128,136,140,200,201,202,203,211,212,214,215,216,217,218,219,224,227,233,234,236,311,313,337,338,374,394,404,405,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'variable_list':([71,],[145,]),'directive':([86,87,523,524,544,545,],[158,165,536,537,549,550,]),'parameters':([90,91,297,298,299,309,386,387,525,526,],[170,174,378,379,380,388,170,174,538,539,]),'expression_list':([106,114,117,118,227,311,394,],[183,191,195,197,334,390,450,]),'relational_operator':([121,322,],[203,203,]),'set_item_list':([140,],[228,]),'set_item':([140,337,],[230,396,]),'constant':([152,232,339,350,402,403,522,532,543,],[241,342,342,407,455,456,535,535,548,]),'data_type_list':([153,155,157,274,310,353,355,383,420,445,446,447,470,492,521,],[249,280,280,359,389,409,415,444,469,482,483,484,501,520,531,]),'array_type':([153,155,157,274,310,353,355,383,420,445,446,447,470,492,521,],[265,285,285,265,265,265,265,265,265,265,265,265,265,265,265,]),'pointer_type':([153,155,157,274,310,353,355,383,420,445,446,447,470,492,521,],[266,287,287,266,266,266,266,266,266,266,266,266,266,266,266,]),'record_type':([153,155,157,274,310,353,355,383,420,445,446,447,470,492,521,],[267,284,284,267,267,267,267,267,267,267,267,267,267,267,267,]),'set_type':([153,155,157,274,310,353,355,383,420,445,446,447,470,492,521,],[268,286,286,268,268,268,268,268,268,268,268,268,268,268,268,]),'file_type':([153,155,157,274,310,353,355,383,420,445,446,447,470,492,521,],[269,288,288,269,269,269,269,269,269,269,269,269,269,269,269,]),'object_type':([153,155,157,274,310,353,355,383,420,445,446,447,470,492,521,],[270,289,289,270,270,270,270,270,270,270,270,270,270,270,270,]),'string_type':([153,155,157,274,310,353,355,383,420,445,446,447,470,492,521,],[271,290,290,271,271,271,271,271,271,271,271,271,271,271,271,]),'type_definition':([155,157,],[279,292,]),'parameter_list':([171,],[300,]),'parameter_group':([171,382,],[301,443,]),'case_list':([232,],[339,]),'case_label':([232,339,],[340,400,]),'record_list':([275,357,547,],[360,417,551,]),'record_declaration':([275,357,360,417,547,551,],[361,361,419,419,361,419,]),'object_heritage':([277,],[365,]),'type_range_list':([354,416,],[410,467,]),'type_range':([354,416,463,],[411,411,493,]),'set_range':([364,],[422,]),'data_type_set':([364,],[423,]),'object_fields':([365,],[431,]),'object_methods':([431,],[473,]),'method_declaration':([473,],[505,]),'constructor_declaration':([473,],[508,]),'destructor_declaration':([473,],[509,]),'variant_list':([522,],[532,]),'variant':([522,532,],[533,541,]),'constant_list':([522,532,],[534,534,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_header uses_clause declaration_blocks main_block','program',4,'p_program','parser.py',9),
  ('program_header -> PROGRAM ID SEMICOLON','program_header',3,'p_program_header','parser.py',15),
  ('program_header -> UNIT ID SEMICOLON','program_header',3,'p_program_header','parser.py',16),
  ('uses_clause -> USES id_list SEMICOLON','uses_clause',3,'p_uses_clause','parser.py',21),
  ('uses_clause -> empty','uses_clause',1,'p_uses_clause','parser.py',22),
  ('id_list -> ID','id_list',1,'p_id_list','parser.py',27),
  ('id_list -> id_list COMMA ID','id_list',3,'p_id_list','parser.py',28),
  ('declaration_blocks -> declaration_blocks declaration_block','declaration_blocks',2,'p_declaration_blocks','parser.py',33),
  ('declaration_blocks -> empty','declaration_blocks',1,'p_declaration_blocks','parser.py',34),
  ('declaration_block -> label_declaration','declaration_block',1,'p_declaration_block','parser.py',39),
  ('declaration_block -> const_declaration_block','declaration_block',1,'p_declaration_block','parser.py',40),
  ('declaration_block -> type_declaration_block','declaration_block',1,'p_declaration_block','parser.py',41),
  ('declaration_block -> var_declaration_block','declaration_block',1,'p_declaration_block','parser.py',42),
  ('declaration_block -> procedure_declaration','declaration_block',1,'p_declaration_block','parser.py',43),
  ('declaration_block -> function_declaration','declaration_block',1,'p_declaration_block','parser.py',44),
  ('declaration_block -> constructor_implementation','declaration_block',1,'p_declaration_block','parser.py',45),
  ('declaration_block -> destructor_implementation','declaration_block',1,'p_declaration_block','parser.py',46),
  ('declaration_block -> method_implementation','declaration_block',1,'p_declaration_block','parser.py',47),
  ('declaration_block -> implementation_block','declaration_block',1,'p_declaration_block','parser.py',48),
  ('declaration_block -> interface_block','declaration_block',1,'p_declaration_block','parser.py',49),
  ('main_block -> compound_statement DOT','main_block',2,'p_main_block','parser.py',54),
  ('interface_block -> INTERFACE declaration_blocks','interface_block',2,'p_interface_block','parser.py',59),
  ('implementation_block -> IMPLEMENTATION declaration_blocks','implementation_block',2,'p_implementation_block','parser.py',64),
  ('label_declaration -> LABEL number_list SEMICOLON','label_declaration',3,'p_label_declaration','parser.py',69),
  ('number_list -> NUMBER','number_list',1,'p_number_list','parser.py',74),
  ('number_list -> number_list COMMA NUMBER','number_list',3,'p_number_list','parser.py',75),
  ('const_declaration_block -> CONST const_list','const_declaration_block',2,'p_const_declaration_block','parser.py',80),
  ('const_list -> const_list const_declaration','const_list',2,'p_const_list','parser.py',85),
  ('const_list -> const_declaration','const_list',1,'p_const_list','parser.py',86),
  ('const_declaration -> ID EQUAL constant SEMICOLON','const_declaration',4,'p_const_declaration','parser.py',91),
  ('const_declaration -> ID COLON data_type_list EQUAL constant SEMICOLON','const_declaration',6,'p_const_declaration','parser.py',92),
  ('constant -> NUMBER','constant',1,'p_constant','parser.py',97),
  ('constant -> STRING','constant',1,'p_constant','parser.py',98),
  ('constant -> TRUE','constant',1,'p_constant','parser.py',99),
  ('constant -> FALSE','constant',1,'p_constant','parser.py',100),
  ('constant -> NIL','constant',1,'p_constant','parser.py',101),
  ('constant -> ORDINAL_CONSTANT','constant',1,'p_constant','parser.py',102),
  ('type_declaration_block -> TYPE type_list','type_declaration_block',2,'p_type_declaration_block','parser.py',108),
  ('type_list -> type_list type_declaration','type_list',2,'p_type_list','parser.py',113),
  ('type_list -> type_declaration','type_list',1,'p_type_list','parser.py',114),
  ('type_declaration -> ID EQUAL type_definition SEMICOLON','type_declaration',4,'p_type_declaration','parser.py',119),
  ('type_definition -> data_type_list','type_definition',1,'p_type_definition','parser.py',124),
  ('type_definition -> LPAREN id_list RPAREN','type_definition',3,'p_type_definition','parser.py',125),
  ('type_definition -> NUMBER DOBLEDOT NUMBER','type_definition',3,'p_type_definition','parser.py',126),
  ('type_definition -> CHAR DOBLEDOT CHAR','type_definition',3,'p_type_definition','parser.py',127),
  ('type_definition -> ID DOBLEDOT ID','type_definition',3,'p_type_definition','parser.py',128),
  ('type_definition -> record_type','type_definition',1,'p_type_definition','parser.py',129),
  ('type_definition -> array_type','type_definition',1,'p_type_definition','parser.py',130),
  ('type_definition -> set_type','type_definition',1,'p_type_definition','parser.py',131),
  ('type_definition -> pointer_type','type_definition',1,'p_type_definition','parser.py',132),
  ('type_definition -> file_type','type_definition',1,'p_type_definition','parser.py',133),
  ('type_definition -> object_type','type_definition',1,'p_type_definition','parser.py',134),
  ('type_definition -> string_type','type_definition',1,'p_type_definition','parser.py',135),
  ('string_type -> STRING','string_type',1,'p_string_type','parser.py',140),
  ('string_type -> STRING LBRACKET NUMBER RBRACKET','string_type',4,'p_string_type','parser.py',141),
  ('record_type -> RECORD record_list END','record_type',3,'p_record_type','parser.py',146),
  ('record_type -> PACKED RECORD record_list END','record_type',4,'p_record_type','parser.py',147),
  ('array_type -> ARRAY LBRACKET type_range_list RBRACKET OF data_type_list','array_type',6,'p_array_type','parser.py',152),
  ('array_type -> PACKED ARRAY LBRACKET type_range_list RBRACKET OF data_type_list','array_type',7,'p_array_type','parser.py',153),
  ('array_type -> ARRAY OF data_type_list','array_type',3,'p_array_type','parser.py',154),
  ('type_range_list -> type_range','type_range_list',1,'p_type_range_list','parser.py',160),
  ('type_range_list -> type_range_list COMMA type_range','type_range_list',3,'p_type_range_list','parser.py',161),
  ('type_range -> NUMBER DOBLEDOT NUMBER','type_range',3,'p_type_range','parser.py',166),
  ('type_range -> NUMBER DOBLEDOT ID','type_range',3,'p_type_range','parser.py',167),
  ('type_range -> ID DOBLEDOT NUMBER','type_range',3,'p_type_range','parser.py',168),
  ('type_range -> CHAR DOBLEDOT CHAR','type_range',3,'p_type_range','parser.py',169),
  ('type_range -> ID DOBLEDOT ID','type_range',3,'p_type_range','parser.py',170),
  ('type_range -> ID','type_range',1,'p_type_range','parser.py',171),
  ('set_type -> SET OF set_range','set_type',3,'p_set_type','parser.py',176),
  ('set_range -> data_type_set','set_range',1,'p_set_range','parser.py',181),
  ('set_range -> NUMBER DOBLEDOT NUMBER','set_range',3,'p_set_range','parser.py',182),
  ('set_range -> CHAR DOBLEDOT CHAR','set_range',3,'p_set_range','parser.py',183),
  ('set_range -> ID','set_range',1,'p_set_range','parser.py',184),
  ('pointer_type -> CARET ID','pointer_type',2,'p_pointer_type','parser.py',189),
  ('pointer_type -> CARET data_type_list','pointer_type',2,'p_pointer_type','parser.py',190),
  ('file_type -> FILE OF data_type_list','file_type',3,'p_file_type','parser.py',195),
  ('file_type -> FILE','file_type',1,'p_file_type','parser.py',196),
  ('object_type -> OBJECT object_heritage object_fields object_methods END','object_type',5,'p_object_type','parser.py',201),
  ('object_heritage -> LPAREN ID RPAREN','object_heritage',3,'p_object_heritage','parser.py',206),
  ('object_heritage -> empty','object_heritage',1,'p_object_heritage','parser.py',207),
  ('object_fields -> object_fields var_declaration','object_fields',2,'p_object_fields','parser.py',212),
  ('object_fields -> empty','object_fields',1,'p_object_fields','parser.py',213),
  ('object_methods -> object_methods method_declaration','object_methods',2,'p_object_methods','parser.py',218),
  ('object_methods -> empty','object_methods',1,'p_object_methods','parser.py',219),
  ('method_declaration -> procedure_header SEMICOLON','method_declaration',2,'p_method_declaration','parser.py',224),
  ('method_declaration -> function_header SEMICOLON','method_declaration',2,'p_method_declaration','parser.py',225),
  ('method_declaration -> constructor_declaration','method_declaration',1,'p_method_declaration','parser.py',226),
  ('method_declaration -> destructor_declaration','method_declaration',1,'p_method_declaration','parser.py',227),
  ('method_declaration -> procedure_header SEMICOLON directive','method_declaration',3,'p_method_declaration','parser.py',228),
  ('method_declaration -> function_header SEMICOLON directive','method_declaration',3,'p_method_declaration','parser.py',229),
  ('constructor_implementation -> CONSTRUCTOR ID DOT ID parameters SEMICOLON declaration_blocks compound_statement SEMICOLON','constructor_implementation',9,'p_constructor_implementation','parser.py',234),
  ('destructor_implementation -> DESTRUCTOR ID DOT ID parameters SEMICOLON declaration_blocks compound_statement SEMICOLON','destructor_implementation',9,'p_destructor_implementation','parser.py',239),
  ('method_implementation -> PROCEDURE ID DOT ID parameters SEMICOLON declaration_blocks compound_statement SEMICOLON','method_implementation',9,'p_method_implementation','parser.py',244),
  ('method_implementation -> FUNCTION ID DOT ID parameters COLON data_type_list SEMICOLON declaration_blocks compound_statement SEMICOLON','method_implementation',11,'p_method_implementation','parser.py',245),
  ('constructor_declaration -> CONSTRUCTOR ID parameters SEMICOLON','constructor_declaration',4,'p_constructor_declaration','parser.py',251),
  ('constructor_declaration -> CONSTRUCTOR ID parameters SEMICOLON directive','constructor_declaration',5,'p_constructor_declaration','parser.py',252),
  ('destructor_declaration -> DESTRUCTOR ID parameters SEMICOLON','destructor_declaration',4,'p_destructor_declaration','parser.py',257),
  ('destructor_declaration -> DESTRUCTOR ID parameters SEMICOLON directive','destructor_declaration',5,'p_destructor_declaration','parser.py',258),
  ('record_list -> record_list record_declaration','record_list',2,'p_record_list','parser.py',263),
  ('record_list -> record_declaration','record_list',1,'p_record_list','parser.py',264),
  ('record_declaration -> id_list COLON data_type_list SEMICOLON','record_declaration',4,'p_record_declaration','parser.py',269),
  ('record_declaration -> CASE ID COLON data_type_list OF variant_list','record_declaration',6,'p_record_declaration','parser.py',270),
  ('record_declaration -> id_list COLON data_type_list','record_declaration',3,'p_record_declaration','parser.py',271),
  ('variant_list -> variant_list variant','variant_list',2,'p_variant_list','parser.py',276),
  ('variant_list -> variant','variant_list',1,'p_variant_list','parser.py',277),
  ('variant -> constant_list COLON LPAREN record_list RPAREN SEMICOLON','variant',6,'p_variant','parser.py',282),
  ('variant -> constant_list COLON LPAREN RPAREN SEMICOLON','variant',5,'p_variant','parser.py',283),
  ('constant_list -> constant','constant_list',1,'p_constant_list','parser.py',288),
  ('constant_list -> constant_list COMMA constant','constant_list',3,'p_constant_list','parser.py',289),
  ('var_declaration_block -> VAR var_list','var_declaration_block',2,'p_var_declaration_block','parser.py',294),
  ('var_list -> var_list var_declaration','var_list',2,'p_var_list','parser.py',299),
  ('var_list -> var_declaration','var_list',1,'p_var_list','parser.py',300),
  ('var_declaration -> id_list COLON type_definition SEMICOLON','var_declaration',4,'p_var_declaration','parser.py',305),
  ('var_declaration -> id_list COLON type_definition EQUAL expression SEMICOLON','var_declaration',6,'p_var_declaration','parser.py',306),
  ('var_declaration -> id_list COLON type_definition ABSOLUTE ID SEMICOLON','var_declaration',6,'p_var_declaration','parser.py',307),
  ('procedure_declaration -> procedure_header SEMICOLON directive SEMICOLON','procedure_declaration',4,'p_procedure_declaration','parser.py',312),
  ('procedure_declaration -> procedure_header SEMICOLON declaration_blocks compound_statement SEMICOLON','procedure_declaration',5,'p_procedure_declaration','parser.py',313),
  ('procedure_header -> PROCEDURE ID parameters','procedure_header',3,'p_procedure_header','parser.py',318),
  ('directive -> FORWARD','directive',1,'p_directive','parser.py',323),
  ('directive -> EXTERNAL','directive',1,'p_directive','parser.py',324),
  ('directive -> EXTERNAL STRING','directive',2,'p_directive','parser.py',325),
  ('directive -> ASM','directive',1,'p_directive','parser.py',326),
  ('directive -> INLINE','directive',1,'p_directive','parser.py',327),
  ('directive -> VIRTUAL','directive',1,'p_directive','parser.py',328),
  ('function_declaration -> function_header SEMICOLON directive','function_declaration',3,'p_function_declaration','parser.py',333),
  ('function_declaration -> function_header SEMICOLON declaration_blocks compound_statement SEMICOLON','function_declaration',5,'p_function_declaration','parser.py',334),
  ('function_header -> FUNCTION ID parameters COLON data_type_list','function_header',5,'p_function_header','parser.py',339),
  ('parameters -> LPAREN parameter_list RPAREN','parameters',3,'p_parameters','parser.py',344),
  ('parameters -> empty','parameters',1,'p_parameters','parser.py',345),
  ('parameter_list -> parameter_list SEMICOLON parameter_group','parameter_list',3,'p_parameter_list','parser.py',350),
  ('parameter_list -> parameter_group','parameter_list',1,'p_parameter_list','parser.py',351),
  ('parameter_group -> id_list COLON data_type_list','parameter_group',3,'p_parameter_group','parser.py',356),
  ('parameter_group -> VAR id_list COLON data_type_list','parameter_group',4,'p_parameter_group','parser.py',357),
  ('parameter_group -> CONST id_list COLON data_type_list','parameter_group',4,'p_parameter_group','parser.py',358),
  ('parameter_group -> procedure_header','parameter_group',1,'p_parameter_group','parser.py',359),
  ('parameter_group -> function_header','parameter_group',1,'p_parameter_group','parser.py',360),
  ('data_type_list -> INTEGER','data_type_list',1,'p_data_type_list','parser.py',366),
  ('data_type_list -> BYTE','data_type_list',1,'p_data_type_list','parser.py',367),
  ('data_type_list -> LONGINT','data_type_list',1,'p_data_type_list','parser.py',368),
  ('data_type_list -> SHORTINT','data_type_list',1,'p_data_type_list','parser.py',369),
  ('data_type_list -> WORD','data_type_list',1,'p_data_type_list','parser.py',370),
  ('data_type_list -> REAL','data_type_list',1,'p_data_type_list','parser.py',371),
  ('data_type_list -> SINGLE','data_type_list',1,'p_data_type_list','parser.py',372),
  ('data_type_list -> DOUBLE','data_type_list',1,'p_data_type_list','parser.py',373),
  ('data_type_list -> EXTENDED','data_type_list',1,'p_data_type_list','parser.py',374),
  ('data_type_list -> SHORT','data_type_list',1,'p_data_type_list','parser.py',375),
  ('data_type_list -> BOOLEAN','data_type_list',1,'p_data_type_list','parser.py',376),
  ('data_type_list -> CHAR','data_type_list',1,'p_data_type_list','parser.py',377),
  ('data_type_list -> STRING','data_type_list',1,'p_data_type_list','parser.py',378),
  ('data_type_list -> STRING LBRACKET NUMBER RBRACKET','data_type_list',4,'p_data_type_list','parser.py',379),
  ('data_type_list -> ID','data_type_list',1,'p_data_type_list','parser.py',380),
  ('data_type_list -> ABSOLUTE ID','data_type_list',2,'p_data_type_list','parser.py',381),
  ('data_type_list -> FILE','data_type_list',1,'p_data_type_list','parser.py',382),
  ('data_type_list -> array_type','data_type_list',1,'p_data_type_list','parser.py',383),
  ('data_type_list -> pointer_type','data_type_list',1,'p_data_type_list','parser.py',384),
  ('data_type_list -> record_type','data_type_list',1,'p_data_type_list','parser.py',385),
  ('data_type_list -> set_type','data_type_list',1,'p_data_type_list','parser.py',386),
  ('data_type_list -> file_type','data_type_list',1,'p_data_type_list','parser.py',387),
  ('data_type_list -> object_type','data_type_list',1,'p_data_type_list','parser.py',388),
  ('data_type_list -> string_type','data_type_list',1,'p_data_type_list','parser.py',389),
  ('data_type_set -> BYTE','data_type_set',1,'p_data_type_set','parser.py',394),
  ('data_type_set -> SHORTINT','data_type_set',1,'p_data_type_set','parser.py',395),
  ('data_type_set -> WORD','data_type_set',1,'p_data_type_set','parser.py',396),
  ('data_type_set -> BOOLEAN','data_type_set',1,'p_data_type_set','parser.py',397),
  ('data_type_set -> CHAR','data_type_set',1,'p_data_type_set','parser.py',398),
  ('data_type_set -> ID','data_type_set',1,'p_data_type_set','parser.py',399),
  ('compound_statement -> BEGIN sentences_list END','compound_statement',3,'p_compound_statement','parser.py',407),
  ('sentences_list -> sentences_list sentence SEMICOLON','sentences_list',3,'p_sentences_list','parser.py',412),
  ('sentences_list -> sentence SEMICOLON','sentences_list',2,'p_sentences_list','parser.py',413),
  ('sentences_list -> empty','sentences_list',1,'p_sentences_list','parser.py',414),
  ('sentence -> assignment','sentence',1,'p_sentence','parser.py',419),
  ('sentence -> procedure_call','sentence',1,'p_sentence','parser.py',420),
  ('sentence -> compound_statement','sentence',1,'p_sentence','parser.py',421),
  ('sentence -> if_statement','sentence',1,'p_sentence','parser.py',422),
  ('sentence -> case_statement','sentence',1,'p_sentence','parser.py',423),
  ('sentence -> for_statement','sentence',1,'p_sentence','parser.py',424),
  ('sentence -> while_statement','sentence',1,'p_sentence','parser.py',425),
  ('sentence -> repeat_statement','sentence',1,'p_sentence','parser.py',426),
  ('sentence -> with_statement','sentence',1,'p_sentence','parser.py',427),
  ('sentence -> goto_statement','sentence',1,'p_sentence','parser.py',428),
  ('sentence -> labeled_sentence','sentence',1,'p_sentence','parser.py',429),
  ('sentence -> asm_statement','sentence',1,'p_sentence','parser.py',430),
  ('sentence -> empty','sentence',1,'p_sentence','parser.py',431),
  ('asm_statement -> ASM','asm_statement',1,'p_asm_statement','parser.py',436),
  ('assignment -> variable ASIGNATION expression','assignment',3,'p_assignment','parser.py',441),
  ('assignment -> ID ASIGNATION expression','assignment',3,'p_assignment','parser.py',442),
  ('assignment -> variable PLUS_ASIGN expression','assignment',3,'p_assignment','parser.py',443),
  ('assignment -> ID PLUS_ASIGN expression','assignment',3,'p_assignment','parser.py',444),
  ('assignment -> variable MINUS_ASIGN expression','assignment',3,'p_assignment','parser.py',445),
  ('assignment -> ID MINUS_ASIGN expression','assignment',3,'p_assignment','parser.py',446),
  ('assignment -> variable TIMES_ASIGN expression','assignment',3,'p_assignment','parser.py',447),
  ('assignment -> ID TIMES_ASIGN expression','assignment',3,'p_assignment','parser.py',448),
  ('assignment -> variable DIVIDE_ASIGN expression','assignment',3,'p_assignment','parser.py',449),
  ('assignment -> ID DIVIDE_ASIGN expression','assignment',3,'p_assignment','parser.py',450),
  ('assignment -> variable EQUAL expression','assignment',3,'p_assignment','parser.py',451),
  ('assignment -> ID EQUAL expression','assignment',3,'p_assignment','parser.py',452),
  ('procedure_call -> ID','procedure_call',1,'p_procedure_call','parser.py',458),
  ('procedure_call -> ID LPAREN expression_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',459),
  ('procedure_call -> ID LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',460),
  ('procedure_call -> variable DOT ID LPAREN expression_list RPAREN','procedure_call',6,'p_procedure_call','parser.py',461),
  ('procedure_call -> variable DOT ID LPAREN RPAREN','procedure_call',5,'p_procedure_call','parser.py',462),
  ('procedure_call -> NEW LPAREN expression_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',463),
  ('procedure_call -> NEW LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',464),
  ('procedure_call -> DISPOSE LPAREN expression_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',465),
  ('procedure_call -> DISPOSE LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',466),
  ('if_statement -> IF expression THEN sentence','if_statement',4,'p_if_statement','parser.py',471),
  ('if_statement -> IF expression THEN sentence ELSE sentence','if_statement',6,'p_if_statement','parser.py',472),
  ('case_statement -> CASE expression OF case_list END','case_statement',5,'p_case_statement','parser.py',477),
  ('case_statement -> CASE expression OF case_list ELSE sentences_list SEMICOLON END','case_statement',8,'p_case_statement','parser.py',478),
  ('case_statement -> CASE expression OF case_list ELSE sentences_list END','case_statement',7,'p_case_statement','parser.py',479),
  ('case_list -> case_list case_label COLON sentence SEMICOLON','case_list',5,'p_case_list','parser.py',484),
  ('case_list -> case_label COLON sentence SEMICOLON','case_list',4,'p_case_list','parser.py',485),
  ('case_list -> empty','case_list',1,'p_case_list','parser.py',486),
  ('case_label -> constant','case_label',1,'p_case_label','parser.py',491),
  ('case_label -> constant DOBLEDOT constant','case_label',3,'p_case_label','parser.py',492),
  ('case_label -> case_label COMMA constant','case_label',3,'p_case_label','parser.py',493),
  ('for_statement -> FOR ID ASIGNATION expression TO expression DO sentence','for_statement',8,'p_for_statement','parser.py',498),
  ('for_statement -> FOR ID ASIGNATION expression DOWNTO expression DO sentence','for_statement',8,'p_for_statement','parser.py',499),
  ('for_statement -> FOR ID IN expression DO sentence','for_statement',6,'p_for_statement','parser.py',500),
  ('while_statement -> WHILE expression DO sentence','while_statement',4,'p_while_statement','parser.py',505),
  ('repeat_statement -> REPEAT sentences_list UNTIL expression','repeat_statement',4,'p_repeat_statement','parser.py',510),
  ('with_statement -> WITH variable_list DO sentence','with_statement',4,'p_with_statement','parser.py',515),
  ('variable_list -> variable','variable_list',1,'p_variable_list','parser.py',520),
  ('variable_list -> variable_list COMMA variable','variable_list',3,'p_variable_list','parser.py',521),
  ('goto_statement -> GOTO NUMBER','goto_statement',2,'p_goto_statement','parser.py',526),
  ('labeled_sentence -> NUMBER COLON sentence','labeled_sentence',3,'p_labeled_sentence','parser.py',531),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',536),
  ('expression -> expression OR simple_expression','expression',3,'p_expression','parser.py',541),
  ('expression -> expression XOR simple_expression','expression',3,'p_expression','parser.py',542),
  ('expression -> simple_expression','expression',1,'p_expression','parser.py',543),
  ('simple_expression -> simple_expression AND relational_expression','simple_expression',3,'p_simple_expression','parser.py',548),
  ('simple_expression -> relational_expression','simple_expression',1,'p_simple_expression','parser.py',549),
  ('relational_expression -> relational_expression relational_operator additive_expression','relational_expression',3,'p_relational_expression','parser.py',554),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','parser.py',555),
  ('relational_operator -> EQUAL','relational_operator',1,'p_relational_operator','parser.py',560),
  ('relational_operator -> DISTINT','relational_operator',1,'p_relational_operator','parser.py',561),
  ('relational_operator -> LESS','relational_operator',1,'p_relational_operator','parser.py',562),
  ('relational_operator -> LESSEQUAL','relational_operator',1,'p_relational_operator','parser.py',563),
  ('relational_operator -> GREATER','relational_operator',1,'p_relational_operator','parser.py',564),
  ('relational_operator -> GREATEREQUAL','relational_operator',1,'p_relational_operator','parser.py',565),
  ('relational_operator -> IN','relational_operator',1,'p_relational_operator','parser.py',566),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',571),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',572),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',573),
  ('multiplicative_expression -> multiplicative_expression TIMES unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',578),
  ('multiplicative_expression -> multiplicative_expression DIVIDE unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',579),
  ('multiplicative_expression -> multiplicative_expression DIV unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',580),
  ('multiplicative_expression -> multiplicative_expression MOD unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',581),
  ('multiplicative_expression -> multiplicative_expression SHL unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',582),
  ('multiplicative_expression -> multiplicative_expression SHR unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',583),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',584),
  ('unary_expression -> NOT unary_expression','unary_expression',2,'p_unary_expression','parser.py',589),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',590),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',591),
  ('unary_expression -> ADDRESS_OF unary_expression','unary_expression',2,'p_unary_expression','parser.py',592),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','parser.py',593),
  ('primary_expression -> variable','primary_expression',1,'p_primary_expression','parser.py',598),
  ('primary_expression -> NUMBER','primary_expression',1,'p_primary_expression','parser.py',599),
  ('primary_expression -> STRING','primary_expression',1,'p_primary_expression','parser.py',600),
  ('primary_expression -> TRUE','primary_expression',1,'p_primary_expression','parser.py',601),
  ('primary_expression -> FALSE','primary_expression',1,'p_primary_expression','parser.py',602),
  ('primary_expression -> NIL','primary_expression',1,'p_primary_expression','parser.py',603),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',604),
  ('primary_expression -> function_call','primary_expression',1,'p_primary_expression','parser.py',605),
  ('primary_expression -> set_constructor','primary_expression',1,'p_primary_expression','parser.py',606),
  ('set_item -> expression','set_item',1,'p_set_item','parser.py',611),
  ('set_item -> expression DOBLEDOT expression','set_item',3,'p_set_item','parser.py',612),
  ('set_item_list -> set_item','set_item_list',1,'p_set_item_list','parser.py',617),
  ('set_item_list -> set_item_list COMMA set_item','set_item_list',3,'p_set_item_list','parser.py',618),
  ('set_constructor -> LBRACKET set_item_list RBRACKET','set_constructor',3,'p_set_constructor','parser.py',623),
  ('set_constructor -> LBRACKET RBRACKET','set_constructor',2,'p_set_constructor','parser.py',624),
  ('variable -> ID','variable',1,'p_variable','parser.py',629),
  ('variable -> variable DOT ID','variable',3,'p_variable','parser.py',630),
  ('variable -> variable LBRACKET expression_list RBRACKET','variable',4,'p_variable','parser.py',631),
  ('variable -> variable CARET','variable',2,'p_variable','parser.py',632),
  ('variable -> LPAREN variable RPAREN CARET','variable',4,'p_variable','parser.py',633),
  ('function_call -> ID LPAREN expression_list RPAREN','function_call',4,'p_function_call','parser.py',639),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','parser.py',640),
  ('function_call -> variable DOT ID LPAREN expression_list RPAREN','function_call',6,'p_function_call','parser.py',641),
  ('function_call -> variable DOT ID LPAREN RPAREN','function_call',5,'p_function_call','parser.py',642),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',648),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',649),
]
